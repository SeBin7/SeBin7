name: Update recent repos

on:
  schedule:
    - cron: "0 0 * * 1,4" # Îß§Ï£º Ïõî/Î™© 00:00 UTC (ÌïúÍµ≠ÏãúÍ∞Ñ Ïò§Ï†Ñ 9Ïãú)
  workflow_dispatch:      # ÏàòÎèô Ïã§Ìñâ Î≤ÑÌäº

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write      # README Ïª§Î∞ãÏóê ÌïÑÏöî

    env:
      GH_USER: SeBin7
      # Ï†úÏô∏ÌïòÍ≥† Ïã∂ÏùÄ Î†àÌè¨(ÏâºÌëú Íµ¨Î∂Ñ). ÌïÑÏöîÏóÜÏúºÎ©¥ Îπà Í∞í("")Î°ú ÎëêÏÑ∏Ïöî.
      EXCLUDE_REPOS: "PRsystem,BitTrip_1.0,Hansung"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fetch recent repositories via GitHub API
        shell: bash
        run: |
          # GitHub API Ìò∏Ï∂ú (Ïù∏Ï¶ù Ìè¨Ìï®) ‚Üí ÏµúÍ∑º ÏóÖÎç∞Ïù¥Ìä∏ ÏàúÏúºÎ°ú ÏµúÎåÄ 100Í∞ú
          curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github+json" \
               "https://api.github.com/users/${GH_USER}/repos?per_page=100&sort=updated" \
            > repos.json

          # EXCLUDE_REPOS Ï≤òÎ¶¨Ïö© Ï†ïÍ∑úÏãù(,Î°ú Íµ¨Î∂ÑÎêú Ïù¥Î¶ÑÎì§ÏùÑ ^(A|B|C)$ ÌòïÌÉúÎ°ú)
          if [[ -n "${EXCLUDE_REPOS}" ]]; then
            EX_RE="^($(echo "${EXCLUDE_REPOS}" | sed 's/,/|/g'))$"
          else
            EX_RE="^$"  # Îß§Ïπò ÏïàÎêòÍ≤å
          fi

          # jqÎ°ú: Ìè¨ÌÅ¨ ÏïÑÎãå Í≥µÍ∞ú Î†àÌè¨ Ï§ë Ï†úÏô∏ Î™©Î°ùÏóê ÏóÜÎäî Í≤É ÏÉÅÏúÑ 6Í∞ú Ï∂îÏ∂ú
          jq -r --arg exre "$EX_RE" '
            map(select(.fork == false))
            | map(select(.name | test($exre) | not))
            | .[:6]
            | .[]
            | [.name, .html_url, (.description // "No description"), .updated_at]
            | @tsv
          ' repos.json > recent.tsv

          # ÏµúÍ∑º Î™©Î°ù Markdown ÏÉùÏÑ±
          {
            echo ""
            while IFS=$'\t' read -r NAME URL DESC UPDATED; do
              DATE=${UPDATED%%T*}  # 2025-10-12T... ‚Üí 2025-10-12
              echo "- <a href=\"${URL}\"><b>${NAME}</b></a> ‚Äî ${DESC} <sub><i>(${DATE})</i></sub>"
            done < recent.tsv
            echo ""
          } > recent.md

      - name: Inject into README between markers
        shell: bash
        run: |
          # READMEÍ∞Ä ÏóÜÏúºÎ©¥ ÏÉùÏÑ±
          [[ -f README.md ]] || echo -e "# ${GH_USER}\n" > README.md

          # ÎßàÏª§Í∞Ä ÏóÜÏúºÎ©¥ Í∏∞Î≥∏ Î∏îÎ°ù Ï∂îÍ∞Ä
          if ! grep -q "<!--RECENT_REPOS_START-->" README.md; then
            cat >> README.md <<'EOF'

## üîÑ Recently Updated
<!--RECENT_REPOS_START-->
<!-- updated by GitHub Actions -->
<!--RECENT_REPOS_END-->
EOF
          fi

          # ÎßàÏª§ ÏÇ¨Ïù¥Î•º recent.md ÎÇ¥Ïö©ÏúºÎ°ú ÍµêÏ≤¥
          awk '
            BEGIN {start="<!--RECENT_REPOS_START-->", end="<!--RECENT_REPOS_END-->"}
            $0 ~ start {print; system("cat recent.md"); flag=1; next}
            $0 ~ end   {flag=0}
            flag==0    {print}
          ' README.md > README.new

          mv README.new README.md

      - name: Commit & push changes
        shell: bash
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add README.md || true
          git diff --staged --quiet && echo "No changes" && exit 0
          git commit -m "docs(readme): auto-update recent repos"
          git push
