name: Update recent repos

on:
  schedule:
    - cron: "0 0 * * 1,4"   # 매주 월/목 00:00 UTC (KST 09:00)
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    env:
      GH_USER: SeBin7
      EXCLUDE_REPOS: "PRsystem,BitTrip_1.0,Hansung"
      COUNT: "6"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fetch repos JSON (auth to avoid rate limit)
        run: |
          curl -sS \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/users/${GH_USER}/repos?per_page=100&sort=updated" \
            > repos.json

      - name: Build recent list (jq)
        run: |
          if [ -n "${EXCLUDE_REPOS}" ]; then
            EX_RE="^($(echo "${EXCLUDE_REPOS}" | sed 's/,/|/g'))$"
          else
            EX_RE="^$"
          fi

          jq -r --arg exre "$EX_RE" --arg n "$COUNT" '
            map(select(.fork == false))                          # 포크 제외
            | map(select(.name | test($exre) | not))             # 제외 목록 제외
            | .[:( ($n|tonumber) )]                              # 상위 N개
            | .[]
            | [.name, .html_url, (.description // "No description"), .updated_at]
            | @tsv
          ' repos.json > recent.tsv

          {
            echo ""
            while IFS=$'\t' read -r NAME URL DESC UPDATED; do
              DATE=${UPDATED%%T*}
              echo "- <a href=\"${URL}\"><b>${NAME}</b></a> — ${DESC} <sub><i>(${DATE})</i></sub>"
            done < recent.tsv
            echo ""
          } > recent.md

      - name: Ensure markers exist in README
        run: |
          [ -f README.md ] || echo -e "# ${GH_USER}\n" > README.md
          if ! grep -q "<!--RECENT_REPOS_START-->" README.md; then
            cat >> README.md <<'EOF'

## 🔄 Recently Updated
<!--RECENT_REPOS_START-->
<!-- updated by GitHub Actions -->
<!--RECENT_REPOS_END-->
EOF
          fi

      - name: Inject recent list into README
        run: |
          awk '
            BEGIN {start="<!--RECENT_REPOS_START-->"; end="<!--RECENT_REPOS_END-->"}
            $0 ~ start {print; system("cat recent.md"); flag=1; next}
            $0 ~ end   {flag=0}
            flag==0    {print}
          ' README.md > README.new
          mv README.new README.md

      - name: Commit & push
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add README.md || true
          git diff --staged --quiet && echo "No changes" && exit 0
          git commit -m "docs(readme): auto-update recent repos"
          git push
